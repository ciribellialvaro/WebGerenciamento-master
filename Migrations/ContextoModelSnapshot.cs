// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebGerenciamento.Models;

#nullable disable

namespace WebGerenciamento.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebGerenciamento.Models.Fabricante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Descricao");

                    b.HasKey("Id");

                    b.ToTable("Fabricante");
                });

            modelBuilder.Entity("WebGerenciamento.Models.Medicamentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdFabricante")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Medicamento")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Medicamento");

                    b.Property<double>("Preço")
                        .HasColumnType("double precision")
                        .HasColumnName("Preço");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer")
                        .HasColumnName("Quantidade");

                    b.Property<string>("ReacoesMedicamento")
                        .HasColumnType("text")
                        .HasColumnName("ReacoesMedicamento");

                    b.Property<string>("Registro")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Registro");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Telefone");

                    b.Property<DateTime>("Validade")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("Validade");

                    b.HasKey("Id");

                    b.HasIndex("IdFabricante");

                    b.ToTable("Medicamentos");
                });

            modelBuilder.Entity("WebGerenciamento.Models.Reacoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Descricao");

                    b.HasKey("Id");

                    b.ToTable("Reacoes");
                });

            modelBuilder.Entity("WebGerenciamento.Models.Medicamentos", b =>
                {
                    b.HasOne("WebGerenciamento.Models.Fabricante", "Fabricante")
                        .WithMany()
                        .HasForeignKey("IdFabricante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fabricante");
                });
#pragma warning restore 612, 618
        }
    }
}
